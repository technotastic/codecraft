/* src/renderer/App.css */

.app-container {
    display: flex;
    height: 100%;
    width: 100%;
    background-color: var(--color-bg-app); /* Use variable */
  }
  
  .sidebar {
    width: 250px;
    flex-shrink: 0;
    background-color: var(--color-bg-sidebar); /* Use variable */
    border-right: 1px solid var(--color-border); /* Use variable */
    padding: var(--spacing-md); /* Use variable */
    height: 100%;
    overflow-y: auto;
    color: var(--color-text-primary); /* Use variable */
  }
  
  .sidebar h2 {
    margin-bottom: var(--spacing-sm); /* Use variable */
    font-size: var(--font-size-lg); /* Use variable */
    color: var(--color-text-heading); /* Use variable */
  }
  
  .sidebar p {
      color: var(--color-text-secondary); /* Use variable */
      font-size: var(--font-size-sm); /* Use variable */
  }
  
  .main-panel {
    flex-grow: 1; /* Take remaining width */
    display: flex;
    flex-direction: column; /* Stack editor and terminal */
    height: 100%;
    overflow: hidden; /* Prevent scrollbars here */
  }
  
  .editor-panel {
    flex-grow: 1; /* Take available vertical space */
    background-color: var(--color-bg-main); /* Use variable */
    /* REMOVED padding to allow editor edge-to-edge */
    overflow: hidden; /* Editor manages its own scrolling */
    display: flex; /* Using flex helps the direct child (MonacoEditor wrapper) fill */
    /* REMOVED centering, editor should fill space */
    color: var(--color-text-secondary); /* Fallback color if needed */
    font-size: var(--font-size-md); /* Fallback font size */
    /* The direct child of .editor-panel (the wrapper div created by react-monaco-editor)
       needs to fill this container. If MonacoEditor isn't filling the space,
       you might need to inspect the DOM and add styles targeting that specific
       wrapper div, or set explicit width/height on the MonacoEditor component itself. */
  }
  
  .terminal-panel {
    height: 200px; /* Keep fixed height for now */
    flex-shrink: 0; /* Prevent shrinking */
    background-color: var(--color-bg-terminal); /* Use variable */
    color: var(--color-text-terminal); /* Use variable */
    border-top: 1px solid var(--color-border-accent); /* Use variable */
    padding: var(--spacing-sm); /* Use variable */
    overflow-y: auto; /* Allow terminal content to scroll */
    font-family: var(--font-family-mono); /* Use variable */
    font-size: var(--font-size-base); /* Use variable */
  }
  
  .terminal-panel p {
      color: #888; /* Keep specific placeholder color or use a variable */
  }