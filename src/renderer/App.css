/* --- START FILE: src/renderer/App.css --- */
/* src/renderer/App.css */

.app-container {
  /* REMOVE display: flex; */
  height: 100%;  /* Crucial: Take full viewport height */
  width: 100%;
  background-color: var(--color-bg-app);
  overflow: hidden; /* Prevent body scrollbars */
}

.sidebar {
  /* REMOVE width: var(--sidebar-width); */
  /* REMOVE flex-shrink: 0; */
  background-color: var(--color-bg-sidebar);
  /* REMOVE border-right: var(--border-standard); */ /* Allotment sash will overlay this */
  /* padding: var(--spacing-md); */ /* Move padding to inner elements if needed */
  height: 100%; /* Still needed to fill the Allotment.Pane vertically */
  color: var(--color-text-primary);
  display: flex; /* Still needed for internal layout (stacking elements) */
  flex-direction: column; /* Stack elements vertically */
  overflow: hidden; /* Hide overflow, internal elements scroll */
}

/* Sidebar Header */
.sidebar-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-md); /* Add padding here */
  border-bottom: var(--border-standard);
  flex-shrink: 0; /* Prevent header from shrinking */
}

.sidebar-header h2 {
  margin: 0; /* Remove default margin */
  font-size: var(--font-size-lg);
  color: var(--color-text-heading);
}

.sidebar-header button {
   font-size: var(--font-size-sm);
   padding: var(--spacing-xxs) var(--spacing-xs); /* Smaller button */
}

/* Navigation Controls */
.navigation-controls {
    display: flex;
    align-items: center;
    padding: var(--spacing-xs) var(--spacing-md);
    border-bottom: var(--border-standard);
    flex-shrink: 0; /* Prevent shrinking */
    gap: var(--spacing-sm); /* Add gap between button and path */
    min-height: 30px; /* Ensure it has some height */
}

.navigation-controls .up-button {
    padding: var(--spacing-xxs) var(--spacing-xs);
    font-size: var(--font-size-sm);
    flex-shrink: 0;
    /* Use theme button styles */
    background-color: var(--color-bg-button);
    border: var(--border-button);
    color: var(--color-text-button);
    border-radius: var(--border-radius-sm);
}
.navigation-controls .up-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: var(--color-bg-button); /* Keep bg consistent when disabled */
}
/* Apply theme-specific button styles if needed (like Win95 bevels) */
.theme-win95 .navigation-controls .up-button,
.theme-mirc .navigation-controls .up-button {
   /* Add specific bevel styles if you have them defined elsewhere for buttons */
}


.navigation-controls .current-folder-path {
    font-size: var(--font-size-sm);
    color: var(--color-text-tertiary);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    flex-grow: 1; /* Allow path to take remaining space */
    padding: 0;
    border-bottom: none;
}


/* File Tree Styling */
.file-tree {
    flex-grow: 1; /* Allow tree to fill remaining vertical space */
    overflow-y: auto; /* Enable scrolling for the tree */
    min-height: 50px;
    padding: var(--spacing-xs) 0; /* Less top/bottom container padding */
    font-size: var(--font-size-sm);
}

.file-tree ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.file-tree-node {
    /* Base list item */
}

/* Style for the clickable content row within a node */
.file-tree-node .node-content {
    display: flex;
    align-items: center;
    cursor: pointer;
    padding: var(--spacing-xxs) var(--spacing-md);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    user-select: none;
    position: relative;
}

.file-tree-node .node-content:hover {
    background-color: var(--color-bg-hover);
}

/* Style for the expand/collapse icon span container */
.file-tree-node .toggle-icon {
    width: 1.5em; /* Reserve space for icon/spacer */
    display: inline-flex; /* Use flex for centering SVG icon */
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    line-height: 1;
    vertical-align: middle; /* Align container with text */
}
.file-tree-node .toggle-icon.spacer {
    visibility: hidden;
}

/* Style for the expand/collapse SVG icon itself */
.file-tree-node .expand-icon {
    /* *** REMOVE font-family override *** */
    /* font-family: ... */
    font-size: 0.9em; /* Adjust size if needed */
    color: var(--color-text-tertiary);
    display: inline-block; /* Allow sizing */
    vertical-align: middle; /* Align icon */
}


/* Style for the file/folder SVG icon */
.file-tree-node .file-icon {
    margin-right: var(--spacing-xs);
    display: inline-flex; /* Use flex for centering SVG icon */
    align-items: center;
    flex-shrink: 0;
    vertical-align: middle; /* Align container with text */
    /* *** REMOVE font-family override *** */
    /* font-family: ... */
    /* Set color for icons if needed, or let it inherit */
    color: var(--color-text-accent); /* Example: Use accent color */
    font-size: 1.1em; /* Slightly larger file/folder icons */
}


/* Style for the node name */
.file-tree-node .node-name {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    vertical-align: middle;
    margin-left: var(--spacing-xxs); /* Small space after icon */
}

/* Style for loading spinner */
.file-tree-node .loading-spinner {
    display: inline-block;
    animation: spin 1s linear infinite;
    font-size: 0.9em;
    vertical-align: middle;
    color: var(--color-text-tertiary);
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* Style for error message or empty folder message */
.file-tree-node .error-message,
.file-tree-node .empty-folder-message {
    color: var(--color-text-tertiary);
    font-style: italic;
    padding: var(--spacing-xxs) 0;
    margin: 0;
    list-style: none;
    user-select: none;
}
.file-tree-node .error-message {
    color: var(--color-text-error);
    font-style: normal;
}


/* Style for the initial placeholder message */
.file-tree .placeholder-message {
    color: var(--color-text-tertiary);
    padding: var(--spacing-md);
    font-style: italic;
}

/* (Keep Theme switcher styles) */
.sidebar .theme-switcher { margin-top: auto; padding: var(--spacing-md); border-top: var(--border-standard); flex-shrink: 0; position: relative; z-index: 5; }
.sidebar .theme-switcher label { display: block; margin-bottom: var(--spacing-xs); font-size: var(--font-size-sm); color: var(--color-text-secondary); }

/* (Keep Main Panel styles) */
.main-panel { display: flex; flex-direction: column; height: 100%; overflow: hidden; background-color: var(--color-bg-main); }
.editor-panel { background-color: var(--color-bg-editor); overflow: hidden; color: var(--color-text-secondary); font-size: var(--font-size-md); position: relative; height: 100%; width: 100%; display: flex; }
.terminal-panel-container { flex-shrink: 0; background-color: var(--color-bg-terminal); color: var(--color-text-terminal); overflow: hidden; font-family: var(--font-family-mono); font-size: var(--font-size-terminal); position: relative; height: 100%; width: 100%; display: flex; padding: var(--spacing-xs); }
.terminal-panel-container > div { width: 100%; height: 100%; }
.terminal-panel-container .terminal.xterm { height: 100% !important; width: 100% !important; }
.terminal-panel-container .xterm-screen { width: 100% !important; height: 100% !important; }
.terminal-panel-container p { display: none; }

/* Ensure editor dirty indicator/error show above Monaco elements if needed */
.editor-panel .error-message { z-index: 2; }
.editor-panel span[style*="absolute"] { z-index: 2; }

/* --- END FILE: src/renderer/App.css --- */